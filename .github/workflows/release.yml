name: Release
on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string
    outputs:
      tag:
        description: "Whether to trigger release workflows"
        value: ${{ jobs.github.outputs.tag }}

permissions:
  contents: write

jobs:
  github:
    name: GitHub
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create GitHub release
        id: release
        uses: anttiharju/actions/release@v1
        with:
          type: ${{ inputs.type }}
      - name: Setup cache
        id: cache
        run: |
          if [ -f "go.sum" ]; then
            echo "enabled=true" >> "$GITHUB_OUTPUT"
          else
            echo "enabled=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: ${{ steps.cache.outputs.enabled }}
      - name: Create darwin-arm64 archive
        env:
          GOOS: darwin
          GOARCH: arm64
          version: ${{ steps.release.outputs.tag }}
        run: |
          ./dist/github/release.bash "$version" "$GOOS" "$GOARCH"
      - name: Create linux-amd64 archive
        env:
          GOOS: linux
          GOARCH: amd64
          version: ${{ steps.release.outputs.tag }}
        run: |
          ./dist/github/release.bash "$version" "$GOOS" "$GOARCH"
      - name: Create darwin-amd64 archive
        env:
          GOOS: darwin
          GOARCH: amd64
          version: ${{ steps.release.outputs.tag }}
        run: |
          ./dist/github/release.bash "$version" "$GOOS" "$GOARCH"
      - name: Create linux-arm64 archive
        env:
          GOOS: linux
          GOARCH: arm64
          version: ${{ steps.release.outputs.tag }}
        run: |
          ./dist/github/release.bash "$version" "$GOOS" "$GOARCH"
      - name: Upload archives to release
        env:
          GH_TOKEN: ${{ github.token }}
          TAG: ${{ steps.release.outputs.tag }}
        run: |
          find . -maxdepth 1 -name '${{ github.event.repository.name }}-*-*.tar.gz' -exec gh release upload "$TAG" {} \;
    outputs:
      tag: ${{ steps.release.outputs.tag }}
